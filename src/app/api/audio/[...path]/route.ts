// src/app/api/audio/[...path]/route.ts
import { NextRequest } from 'next/server';
import * as fs from 'fs';
import * as path from 'path';

/**
 * API route to serve audio files from the server filesystem
 * This allows audio files generated by the backend to be accessed by the frontend
 */
export async function GET(
  request: NextRequest,
  { params }: { params: { path: string[] } }
) {
  try {
    // Get the file path from the URL
    const filePath = params.path.join('/');
    
    // Construct the full path to the audio file
    // Adjust this base path to match where your audio files are stored
    const fullPath = path.join(process.cwd(), 'podcast_audio', filePath);
    
    console.log('Reading audio file:', fullPath);
    
    // Check if the file exists
    if (!fs.existsSync(fullPath)) {
      console.error('Audio file not found:', fullPath);
      return new Response('Audio file not found', { status: 404 });
    }
    
    // Read the file
    const fileBuffer = fs.readFileSync(fullPath);
    
    // Determine content type based on file extension
    let contentType = 'audio/wav';
    if (fullPath.endsWith('.mp3')) {
      contentType = 'audio/mpeg';
    }
    
    // Return the file with appropriate headers
    return new Response(fileBuffer, {
      headers: {
        'Content-Type': contentType,
        'Content-Length': fileBuffer.length.toString(),
        'Cache-Control': 'public, max-age=3600',
      },
    });
  } catch (error) {
    console.error('Error serving audio file:', error);
    return new Response('Error serving audio file', { status: 500 });
  }
}